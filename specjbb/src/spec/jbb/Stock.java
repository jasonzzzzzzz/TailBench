/* *  *  *  * Copyright (c) 2000-2005 Standard Performance Evaluation Corporation (SPEC) *  * All rights reserved. *  * Copyright (c) 1996-2005 IBM Corporation, Inc. All rights reserved. *  */package spec.jbb;import java.math.BigInteger;public class Stock {    // This goes right after each class/interface statement    static final String COPYRIGHT = "SPECjbb2005,"                                          + "Copyright (c) 2005 Standard Performance Evaluation Corporation (SPEC),"                                          + "All rights reserved,"                                          + "(C) Copyright IBM Corp., 1996 - 2005"                                          + "All rights reserved,"                                          + "Licensed Materials - Property of SPEC";    // misc:    private Company     company;    // required fields    private String      district_text[];    private String      data;    private int         id;    private int         quantity;    private BigInteger  ytd;    private short       orderCount;    private short       remoteCount;    private short       warehouseId;    public Stock(Company inCompany, int itemId, short wId) {        this.initStock(inCompany, itemId, wId);    };    public void initStock(Company inCompany, int itemId, short wId) {        int district;        short maxDistricts;        Integer hit;        quantity = (int) JBButil.random(10, 100, wId);        ytd = BigInteger.ZERO;        orderCount = 0;        remoteCount = 0;        hit = new Integer(0);        data = new String(JBButil.create_a_string_with_original(26, 50, 10f,                hit, wId));        company = inCompany;        id = itemId;        warehouseId = wId;        maxDistricts = company.getMaxDistrictsPerWarehouse();        district_text = new String[maxDistricts];        for (district = 0; district < maxDistricts; district++) {            district_text[district] = new String(JBButil                    .create_random_a_string(25, 25, warehouseId));        }    }    public synchronized int getQuantity() {        int temp = quantity;        return temp;    }    public synchronized void changeQuantity(int delta) {        quantity += delta;    }    public synchronized void incrementOrderCount() {        ++orderCount;    }    public synchronized void incrementRemoteCount() {        ++remoteCount;    }    public synchronized int getId() {        int temp = id;        return temp;    }    public synchronized String getDistrictInfo(byte districtId) {        return district_text[districtId - 1];    }    public synchronized String getData() {        String temp = new String(data);        return temp;    }    public synchronized void incrementYTD(short ol_quantity) {        ytd.add(BigInteger.valueOf(ol_quantity));    }}
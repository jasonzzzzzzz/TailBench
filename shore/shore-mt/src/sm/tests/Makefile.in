# Makefile.in generated by automake 1.11.3 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# if tcl.h is not in your /usr/include, put its path here.
# I haven't found a way to locate it with autoconf yet.
#
# deathstar:
# Built-from-sources, with symbols:
# note: not on chianti:
# TCL_INCLUDE = /scratch/s/tcl/include
# TCL_LIB = -L/scratch/s/tcl/lib -ltcl8.5
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/Makefile.generic $(top_srcdir)/Makefile.local
@COMPILER_IS_SUNCC_TRUE@am__append_1 = -features=extensions,zla \
@COMPILER_IS_SUNCC_TRUE@	-xdebugformat=stabs -DSOLARIS2 \
@COMPILER_IS_SUNCC_TRUE@	-library=stlport4 -mt -lpthread
# -pedantic requires -Wno-long-long
# TODO: fix this comment
# Let's avoid use of long long if possible, and require
# explicit C++ types based on data model of compiler.  There
# might be some cases where the underlying library function
# or system include file uses long long, in which case we will have to.
#
#
@COMPILER_IS_GCC_TRUE@@COMPILER_IS_SUNCC_FALSE@am__append_2 = -Wextra -Wall -Wno-long-long -pthread
@COMPILER_IS_GCC_FALSE@@COMPILER_IS_SUNCC_FALSE@am__append_3 = UNKNOWN COMPILER
@COMPILER_IS_GCC_TRUE@am__append_4 = -D__GNUC_AS__ -D_ASM
@COMPILER_IS_SUNCC_TRUE@@ENABLE_ARCH_LP64_TRUE@am__append_5 = $(TARGET_FLAGS)
@COMPILER_IS_SUNCC_FALSE@@ENABLE_ARCH_LP64_TRUE@am__append_6 = $(TARGET_FLAGS) 
@ENABLE_ARCH_LP64_FALSE@am__append_7 = $(TARGET_FLAGS) -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 
@USE_IOS_COMPAT_TRUE@am__append_8 = -I$(top_srcdir)/src/compat

# --------------------------------------------------------
#
# Determine which gcc warnings to use, based on which 
# compiler version we are using.
#
# -Wno-deprecated # TODO:remove
#
# Note: gcc seems to issue a false positive warning about strict aliasing
# in the new override code, so we have to add -fno-strict-aliasing.
# --------------------------------------------------------
@COMPILER_IS_GCC_TRUE@am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings

# /* In adition to the 3.2 warnings, prototype errors for c/objc only */
@COMPILER_IS_GCC_TRUE@@GCC_VER_34_WARNINGS_TRUE@am__append_10 = 
# /* GCC 3.2 doesn't like -Wmissing-declarations and -Wnested-externs */
@COMPILER_IS_GCC_TRUE@@GCC_VER_34_WARNINGS_FALSE@@GCC_VER_3_WARNINGS_TRUE@am__append_11 = -Wstrict-prototypes -Wmissing-prototypes 
# /* Need this to stop warnings of normal (old) standard c++ facilities use. */
@COMPILER_IS_GCC_TRUE@@GCC_VER_34_WARNINGS_FALSE@@GCC_VER_3_WARNINGS_FALSE@am__append_12 = -Wstrict-prototypes \
@COMPILER_IS_GCC_TRUE@@GCC_VER_34_WARNINGS_FALSE@@GCC_VER_3_WARNINGS_FALSE@	-Wmissing-prototypes \
@COMPILER_IS_GCC_TRUE@@GCC_VER_34_WARNINGS_FALSE@@GCC_VER_3_WARNINGS_FALSE@	-Wmissing-declarations \
@COMPILER_IS_GCC_TRUE@@GCC_VER_34_WARNINGS_FALSE@@GCC_VER_3_WARNINGS_FALSE@	-Wnested-externs
@COMPILER_IS_GCC_TRUE@am__append_13 = -Woverloaded-virtual 
@DEBUGGERSYMBOLS_TRUE@am__append_14 = $(SYMBOLSFLAGS)
@DEBUGGERSYMBOLS_FALSE@am__append_15 = $(NOSYMBOLSFLAGS)
# PURIFY_COLLECTOR = -collector=/usr/bin/ld
@PURIFY_TRUE@am__append_16 = $(PURIFY_LIBS)
@PURIFY_TRUE@am__append_17 = $(check_PROGRAMS:%=%.pure)
@PURIFY_TRUE@am__append_18 = -DPURIFY -DPURIFY_ZERO -I$(PURIFY_INCLUDE) 
# QUANTIFY_COLLECTOR = -collector=/usr/bin/ld
@QUANTIFY_TRUE@am__append_19 = $(QUANTIFY_LIBS)
@QUANTIFY_TRUE@am__append_20 = $(check_PROGRAMS:%=%.quant)
@QUANTIFY_TRUE@am__append_21 = -DQUANTIFY -I$(QUANTIFY_INCLUDE) 
# PURECOV_COLLECTOR = -collector=/usr/bin/ld
@PURECOV_TRUE@am__append_22 = $(PURECOV_LIBS)
@PURECOV_TRUE@am__append_23 = $(check_PROGRAMS:%=%.purecov)
@PURECOV_TRUE@am__append_24 = -DPURECOV -I$(PURECOV_INCLUDE) 
subdir = src/sm/tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config/shore-config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am_create_rec_OBJECTS = create_rec.$(OBJEXT) \
	init_config_options.$(OBJEXT)
create_rec_OBJECTS = $(am_create_rec_OBJECTS)
create_rec_LDADD = $(LDADD)
am__DEPENDENCIES_1 = $(top_srcdir)/src/atomic_ops/libatomic_ops.a \
	$(am__append_16) $(am__append_19) $(am__append_22)
create_rec_DEPENDENCIES = $(top_builddir)/src/sm/libsm.a \
	$(top_builddir)/src/common/libcommon.a \
	$(top_builddir)/src/sthread/libsthread.a \
	$(top_builddir)/src/fc/libfc.a $(am__DEPENDENCIES_1)
am_file_scan_OBJECTS = file_scan.$(OBJEXT) \
	init_config_options.$(OBJEXT)
file_scan_OBJECTS = $(am_file_scan_OBJECTS)
file_scan_LDADD = $(LDADD)
file_scan_DEPENDENCIES = $(top_builddir)/src/sm/libsm.a \
	$(top_builddir)/src/common/libcommon.a \
	$(top_builddir)/src/sthread/libsthread.a \
	$(top_builddir)/src/fc/libfc.a $(am__DEPENDENCIES_1)
am_file_scan_many_OBJECTS = file_scan_many.$(OBJEXT) \
	init_config_options.$(OBJEXT)
file_scan_many_OBJECTS = $(am_file_scan_many_OBJECTS)
file_scan_many_LDADD = $(LDADD)
file_scan_many_DEPENDENCIES = $(top_builddir)/src/sm/libsm.a \
	$(top_builddir)/src/common/libcommon.a \
	$(top_builddir)/src/sthread/libsthread.a \
	$(top_builddir)/src/fc/libfc.a $(am__DEPENDENCIES_1)
am_htab_OBJECTS = htab.$(OBJEXT)
htab_OBJECTS = $(am_htab_OBJECTS)
htab_LDADD = $(LDADD)
htab_DEPENDENCIES = $(top_builddir)/src/sm/libsm.a \
	$(top_builddir)/src/common/libcommon.a \
	$(top_builddir)/src/sthread/libsthread.a \
	$(top_builddir)/src/fc/libfc.a $(am__DEPENDENCIES_1)
am_lock_cache_test_OBJECTS = lock_cache_test.$(OBJEXT)
lock_cache_test_OBJECTS = $(am_lock_cache_test_OBJECTS)
lock_cache_test_LDADD = $(LDADD)
lock_cache_test_DEPENDENCIES = $(top_builddir)/src/sm/libsm.a \
	$(top_builddir)/src/common/libcommon.a \
	$(top_builddir)/src/sthread/libsthread.a \
	$(top_builddir)/src/fc/libfc.a $(am__DEPENDENCIES_1)
am_lockid_test_OBJECTS = lockid_test.$(OBJEXT)
lockid_test_OBJECTS = $(am_lockid_test_OBJECTS)
lockid_test_LDADD = $(LDADD)
lockid_test_DEPENDENCIES = $(top_builddir)/src/sm/libsm.a \
	$(top_builddir)/src/common/libcommon.a \
	$(top_builddir)/src/sthread/libsthread.a \
	$(top_builddir)/src/fc/libfc.a $(am__DEPENDENCIES_1)
am_mrbtrees_test_OBJECTS = mrbtrees_test.$(OBJEXT) \
	init_config_options.$(OBJEXT)
mrbtrees_test_OBJECTS = $(am_mrbtrees_test_OBJECTS)
mrbtrees_test_LDADD = $(LDADD)
mrbtrees_test_DEPENDENCIES = $(top_builddir)/src/sm/libsm.a \
	$(top_builddir)/src/common/libcommon.a \
	$(top_builddir)/src/sthread/libsthread.a \
	$(top_builddir)/src/fc/libfc.a $(am__DEPENDENCIES_1)
am_rtree_example_OBJECTS = rtree_example.$(OBJEXT) \
	init_config_options.$(OBJEXT)
rtree_example_OBJECTS = $(am_rtree_example_OBJECTS)
rtree_example_LDADD = $(LDADD)
rtree_example_DEPENDENCIES = $(top_builddir)/src/sm/libsm.a \
	$(top_builddir)/src/common/libcommon.a \
	$(top_builddir)/src/sthread/libsthread.a \
	$(top_builddir)/src/fc/libfc.a $(am__DEPENDENCIES_1)
am_sort_stream_OBJECTS = sort_stream.$(OBJEXT) \
	init_config_options.$(OBJEXT)
sort_stream_OBJECTS = $(am_sort_stream_OBJECTS)
sort_stream_LDADD = $(LDADD)
sort_stream_DEPENDENCIES = $(top_builddir)/src/sm/libsm.a \
	$(top_builddir)/src/common/libcommon.a \
	$(top_builddir)/src/sthread/libsthread.a \
	$(top_builddir)/src/fc/libfc.a $(am__DEPENDENCIES_1)
am_startstop_OBJECTS = startstop.$(OBJEXT)
startstop_OBJECTS = $(am_startstop_OBJECTS)
startstop_LDADD = $(LDADD)
startstop_DEPENDENCIES = $(top_builddir)/src/sm/libsm.a \
	$(top_builddir)/src/common/libcommon.a \
	$(top_builddir)/src/sthread/libsthread.a \
	$(top_builddir)/src/fc/libfc.a $(am__DEPENDENCIES_1)
am_vtable_example_OBJECTS = vtable_example.$(OBJEXT) \
	init_config_options.$(OBJEXT)
vtable_example_OBJECTS = $(am_vtable_example_OBJECTS)
vtable_example_LDADD = $(LDADD)
vtable_example_DEPENDENCIES = $(top_builddir)/src/sm/libsm.a \
	$(top_builddir)/src/common/libcommon.a \
	$(top_builddir)/src/sthread/libsthread.a \
	$(top_builddir)/src/fc/libfc.a $(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/config
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(create_rec_SOURCES) $(file_scan_SOURCES) \
	$(file_scan_many_SOURCES) $(htab_SOURCES) \
	$(lock_cache_test_SOURCES) $(lockid_test_SOURCES) \
	$(mrbtrees_test_SOURCES) $(rtree_example_SOURCES) \
	$(sort_stream_SOURCES) $(startstop_SOURCES) \
	$(vtable_example_SOURCES)
DIST_SOURCES = $(create_rec_SOURCES) $(file_scan_SOURCES) \
	$(file_scan_many_SOURCES) $(htab_SOURCES) \
	$(lock_cache_test_SOURCES) $(lockid_test_SOURCES) \
	$(mrbtrees_test_SOURCES) $(rtree_example_SOURCES) \
	$(sort_stream_SOURCES) $(startstop_SOURCES) \
	$(vtable_example_SOURCES)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCAS = @CCAS@
CCASDEPMODE = @CCASDEPMODE@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CFLAGS = 
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
# This clearing of CXXFLAGS is necessary to override the
# annoying -g -O2 that autoconf stuffs in there, and which
# I cannot find any other way to control.
CXXFLAGS = 
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DTRACE = @DTRACE@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
RANLIB = @RANLIB@
RMM = @RMM@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
uname_machine = @uname_machine@

# -*- mode:Makefile -*-
# rules, macros generic to all Makefile.am
AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha

# dewitt-gw, chianti, deathstar
# ActiveTcl no-symbols installed:
TCL_INCLUDE = /scratch/nhall/tcl/include
TCL_LIB = -L/scratch/nhall/tcl/lib -ltcl8.5

# d-12, dewitt-gw:
# ActiveTcl no-symbols installed:
# TCL_INCLUDE = /u/n/h/nhall/tcl/include
# TCL_LIB = -L/u/n/h/nhall/tcl/lib -ltcl8.5

# PURE_DIR = /s/purifyplus-7.0/@sys/
# PURE_DIR = /s/purifyplus/@sys/
PURE_DIR = /s/purifyplus/amd64_rhel5
# PURE_CACHE_DIR = /scratch/nhall/pure
# d-12:
PURE_CACHE_DIR = /tmp/nhall/pure

# --------------------------------------------------------
#
# Local non-standard paths to things are in Makefile.local
#
# --------------------------------------------------------
DISTCLEANFILES = Makefile $(GENFILES)
BUILT_SOURCES = $(GENFILES)
# installdir = $(top_srcdir)/installdir
# docdir = $(installdir)/doc

# --------------------------------------------------------
#
# Initialize  
#
# --------------------------------------------------------

# that the posix-compliant clib interfaces are there (e.g., ctime_r)
# (Actually, you're supposed to get them both with _POSIX_C_SOURCE > 199506L
# but I'm not that trusting.)
ALWAYS_FLAGS = -DNO_FASTNEW -D_REENTRANT -D_POSIX_PTHREAD_SEMANTICS \
	$(am__append_1) $(am__append_2) $(am__append_3) \
	$(am__append_5) $(am__append_6) $(am__append_7) \
	-I$(top_srcdir)/src/atomic_ops $(am__append_8)
# NO_INLINE_FLAGS =  -fno-inline
@COMPILER_IS_GCC_TRUE@@COMPILER_IS_SUNCC_FALSE@NO_INLINE_FLAGS = 
#  CC turns on inlining based on optimization level.  at O0 it should
#  do no inlining at less than O3.  There is no way to force inlining to
#  be off (well, +d does except when the optimization level overrides it); 
#  but you can force it to be on.
@COMPILER_IS_SUNCC_TRUE@NO_INLINE_FLAGS = +d
@COMPILER_IS_GCC_TRUE@@COMPILER_IS_SUNCC_FALSE@YES_INLINE_FLAGS = -finline-functions
@COMPILER_IS_SUNCC_TRUE@YES_INLINE_FLAGS = 
AM_CCASFLAGS = -I$(top_srcdir)/config -I$(top_srcdir)/src/atomic_ops \
	$(am__append_4) $(TARGET_FLAGS)
# GCC/32
@COMPILER_IS_SUNCC_FALSE@@ENABLE_ARCH_LP64_FALSE@TARGET_FLAGS = -m32 -UARCH_LP64
# TUNE_FLAGS = -mtune=generic
@COMPILER_IS_SUNCC_FALSE@@ENABLE_ARCH_LP64_TRUE@TARGET_FLAGS = -m64 -DARCH_LP64 

# SUN CC/32
@COMPILER_IS_SUNCC_TRUE@@ENABLE_ARCH_LP64_FALSE@TARGET_FLAGS = -m32 -UARCH_LP64
@COMPILER_IS_SUNCC_TRUE@@ENABLE_ARCH_LP64_TRUE@TARGET_FLAGS = -m64 -DARCH_LP64
@COMPILER_IS_SUNCC_FALSE@@ENABLE_ARCH_LP64_TRUE@AM_LDFLAGS = -m64
@COMPILER_IS_SUNCC_TRUE@@ENABLE_ARCH_LP64_TRUE@AM_LDFLAGS = -m64
@ENABLE_ARCH_LP64_FALSE@AM_LDFLAGS = -m32
@COMPILER_IS_SUNCC_FALSE@@ENABLE_ARCH_LP64_FALSE@TUNE_FLAGS = -mtune=generic

#TUNE_FLAGS = -mtune=nocona
@COMPILER_IS_SUNCC_FALSE@@ENABLE_ARCH_LP64_TRUE@TUNE_FLAGS = -march=core2 -mtune=core2
@COMPILER_IS_SUNCC_TRUE@@ENABLE_ARCH_LP64_FALSE@TUNE_FLAGS = -xtarget=native
@COMPILER_IS_SUNCC_TRUE@@ENABLE_ARCH_LP64_TRUE@TUNE_FLAGS = -xtarget=native
@COMPILER_IS_GCC_TRUE@@NOPEDANTIC_FALSE@PEDANTIC = -pedantic-errors  
@COMPILER_IS_GCC_TRUE@@NOPEDANTIC_TRUE@PEDANTIC = 
LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)
# CXX flags that go on the compiles for pure products
PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)
GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \
	$(am__append_12) $(am__append_13)
AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \
	$(OPTFLAGS) $(PURE_CXXFLAGS) $(ALWAYS_FLAGS) $(TEMPLATEFLAGS) \
	-I$(top_srcdir)/src/fc -I$(top_srcdir)/src/sthread \
	-I$(top_srcdir)/src/common -I$(top_srcdir)/src/sm
AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)
ALLCLEANFILES = $(DISTCLEANFILES) \
	       	$(MOSTLYCLEANFILES) \
	       	$(MAINTAINERCLEANFILES) \
	       	$(CLEANFILES) 

@COMPILER_IS_GCC_TRUE@W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated 
GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG 
GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG 

#----------------- GCC  -----------------------------------
# -fstack-check removed because sthread does its own, and sthread/tests/
# thread1 test won't build with this turned on: -fstack-check
@COMPILER_IS_SUNCC_FALSE@SYMBOLSFLAGS = -ggdb

# --------------------------------------------------------
#
# handle --enable-debug config option
#
# --------------------------------------------------------
#----------------- SUN CC -----------------------------------
# SYMBOLSFLAGS = -g -xs -xinstrument=datarace -DTHA_RACE
@COMPILER_IS_SUNCC_TRUE@SYMBOLSFLAGS = -g -xs 
@COMPILER_IS_SUNCC_FALSE@NOSYMBOLSFLAGS = 
# -g0 turns off inlining
@COMPILER_IS_SUNCC_TRUE@NOSYMBOLSFLAGS = -g0 
@COMPILER_IS_SUNCC_FALSE@NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) 
@COMPILER_IS_SUNCC_TRUE@NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS)
@COMPILER_IS_SUNCC_FALSE@MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)
@COMPILER_IS_SUNCC_TRUE@MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)
@COMPILER_IS_SUNCC_FALSE@FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)
@COMPILER_IS_SUNCC_TRUE@FULLOPTFLAGS = -xO4
@DEBUGLEVEL1_FALSE@@DEBUGLEVEL2_FALSE@@DEBUGLEVEL3_FALSE@DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \
@DEBUGLEVEL1_FALSE@@DEBUGLEVEL2_FALSE@@DEBUGLEVEL3_FALSE@	$(am__append_14) \
@DEBUGLEVEL1_FALSE@@DEBUGLEVEL2_FALSE@@DEBUGLEVEL3_FALSE@	$(am__append_15)
@DEBUGLEVEL1_TRUE@@DEBUGLEVEL2_FALSE@@DEBUGLEVEL3_FALSE@DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \
@DEBUGLEVEL1_TRUE@@DEBUGLEVEL2_FALSE@@DEBUGLEVEL3_FALSE@	$(am__append_14) \
@DEBUGLEVEL1_TRUE@@DEBUGLEVEL2_FALSE@@DEBUGLEVEL3_FALSE@	$(am__append_15)
@DEBUGLEVEL2_TRUE@@DEBUGLEVEL3_FALSE@DEBUGFLAGS =  \
@DEBUGLEVEL2_TRUE@@DEBUGLEVEL3_FALSE@	$(GENERIC_NODEBUG_FLAGS) \
@DEBUGLEVEL2_TRUE@@DEBUGLEVEL3_FALSE@	$(am__append_14) \
@DEBUGLEVEL2_TRUE@@DEBUGLEVEL3_FALSE@	$(am__append_15)
@DEBUGLEVEL3_TRUE@DEBUGFLAGS = $(GENERIC_YESDEBUG_FLAGS) \
@DEBUGLEVEL3_TRUE@	$(am__append_14) $(am__append_15)
@DEBUGLEVEL1_FALSE@@DEBUGLEVEL2_FALSE@@DEBUGLEVEL3_FALSE@OPTFLAGS = $(FULLOPTFLAGS)
@DEBUGLEVEL1_TRUE@@DEBUGLEVEL2_FALSE@@DEBUGLEVEL3_FALSE@OPTFLAGS = $(MIDOPTFLAGS)
@DEBUGLEVEL2_TRUE@@DEBUGLEVEL3_FALSE@OPTFLAGS = $(NOOPTFLAGS)
@DEBUGLEVEL3_TRUE@OPTFLAGS = $(NOOPTFLAGS)
@DISABLE_OPTIMIZATIONS_TRUE@OPTFLAGS = $(NOOPTFLAGS)
@EXPLICIT_TEMPLATE_FALSE@TEMPLATEFLAGS = 

# --------------------------------------------------------
#
# handle --enable-explicit config option
#
# --------------------------------------------------------
@EXPLICIT_TEMPLATE_TRUE@TEMPLATEFLAGS = -fno-implicit-templates -DEXPLICIT_TEMPLATE

# --------------------------------------------------------

# Initialize LOCALLDADD 
# Note: on solaris -lnsl may be needed for gethostbyname()
LOCALLDADD = $(top_srcdir)/src/atomic_ops/libatomic_ops.a -lnsl \
	$(am__append_16) $(am__append_19) $(am__append_22)

# --------------------------------------------------------
#
# handle --enable-purify config option
#
# --------------------------------------------------------

# PURIFY_INCLUDE = $(PURE_DIR)/include
# no proper installation here, so hack all three of these paths ...
# PURIFY_LIBS = $(PURE_DIR)/lib/libpurify_stubs.a
# PURIFY_BIN = $(PURE_DIR)/bin
# PURIFY_INCLUDE = $(PURE_DIR)/releases/purify.i386_linux2.7.0
@PURIFY_TRUE@PURIFY_INCLUDE = $(PURE_DIR)/releases/purify.i386_linux2.7.0.0.0-014
# yes, libs are in the same place as is the header file
@PURIFY_TRUE@PURIFY_LIBS = $(PURIFY_INCLUDE)/lib64/libpurify_stubs.a
@PURIFY_TRUE@PURIFY_BIN = $(PURE_DIR)/bin
@PURIFY_TRUE@PURIFY_FLAGS = -g++=yes -cache-dir=$(PURE_CACHE_DIR) -threads=yes -pointer-mask-64=0xfffffffffffffffe
@PURECOV_TRUE@SUFFIXES = .purecov
@PURIFY_TRUE@SUFFIXES = .pure
@QUANTIFY_TRUE@SUFFIXES = .quant

# --------------------------------------------------------
#
# handle --enable-quantify config option
#
# --------------------------------------------------------

# QUANTIFY_INCLUDE = $(PURE_DIR)/include
# no proper installation here, so hack all three of these paths ...
# QUANTIFY_LIBS = 
# QUANTIFY_BIN = $(PURE_DIR)/bin
@QUANTIFY_TRUE@QUANTIFY_INCLUDE = $(PURE_DIR)/releases/quantify.i386_linux2.7.0
# yes, libs are in the same place as is the header file
@QUANTIFY_TRUE@QUANTIFY_LIBS = $(QUANTIFY_INCLUDE)/libquantify_stubs.a
@QUANTIFY_TRUE@QUANTIFY_BIN = $(PURE_DIR)/bin
@QUANTIFY_TRUE@QUANTIFY_FLAGS = -g++=yes \
@QUANTIFY_TRUE@	     -copy-fd-output-to-logfile=1,2 \
@QUANTIFY_TRUE@	     -ignore-signals=SIGUSR1 \
@QUANTIFY_TRUE@	     -threads -thread-stack-change=0x3000 -max_threads=64 \
@QUANTIFY_TRUE@	     -cache-dir=$(PURE_CACHE_DIR)

GROFF_OPTIONS = -s -m man -U

# --------------------------------------------------------
#
# handle --enable-purecov config option
#
# --------------------------------------------------------

# PURECOV_INCLUDE = $(PURE_DIR)/include
# no proper installation here, so hack all three of these paths ...
# PURECOV_LIBS = $(PURE_DIR)/lib/libpurecov_stubs.a
# PURECOV_BIN = $(PURE_DIR)/bin
@PURECOV_TRUE@PURECOV_INCLUDE = $(PURE_DIR)/releases/purecov.i386_linux2.7.0
# yes, libs are in the same place as is the header file
@PURECOV_TRUE@PURECOV_LIBS = $(PURECOV_INCLUDE)/libpurecov_stubs.a
@PURECOV_TRUE@PURECOV_BIN = $(PURE_DIR)/bin
@PURECOV_TRUE@PURECOV_FLAGS = -g++=yes -chain-length=10  -inuse-at-exit \
@PURECOV_TRUE@	     -first-only -leaks-at-exit -copy-fd-output-to-logfile=1,2 \
@PURECOV_TRUE@	     -ignore-signals=SIGUSR1 -pointer-mask=0xfffffffe \
@PURECOV_TRUE@	     -threads -thread-stack-change=0x3000 -max_threads=64 \
@PURECOV_TRUE@	     -cache-dir=$(PURE_CACHE_DIR)

RESULT_COMPARISON_FILES = \
						  lockid_test-out.x86_64 \
						  lockid_test-out.sun4v \
						  lock_cache_test-out \
						  htab-n500-out \
						  htab-n10000-R-out \
						  htab-n100000-R-out 

EXTRA_DIST = testall EXAMPLE_SHORECONFIG $(RESULT_COMPARISON_FILES)
CLEANFILES = ./log/* ./volumes/*
check_PROGRAMS = file_scan$(EXEEXT) \
		    startstop$(EXEEXT) \
		    create_rec$(EXEEXT) \
		    sort_stream$(EXEEXT) \
		    file_scan_many$(EXEEXT) \
		    lockid_test$(EXEEXT) \
		    lock_cache_test$(EXEEXT) \
		    vtable_example$(EXEEXT) \
		    rtree_example$(EXEEXT) \
		    htab$(EXEEXT) \
                    mrbtrees_test$(EXEEXT)	

TESTS = testall
lockid_test_SOURCES = lockid_test.cpp 
lock_cache_test_SOURCES = lock_cache_test.cpp 
startstop_SOURCES = startstop.cpp 
file_scan_SOURCES = file_scan.cpp init_config_options.cpp 
file_scan_many_SOURCES = file_scan_many.cpp init_config_options.cpp 
create_rec_SOURCES = create_rec.cpp init_config_options.cpp 
sort_stream_SOURCES = sort_stream.cpp init_config_options.cpp 
vtable_example_SOURCES = vtable_example.cpp init_config_options.cpp 
rtree_example_SOURCES = rtree_example.cpp init_config_options.cpp 
mrbtrees_test_SOURCES = mrbtrees_test.cpp init_config_options.cpp
htab_SOURCES = htab.cpp
LDADD = \
	$(top_builddir)/src/sm/libsm.a  \
	$(top_builddir)/src/common/libcommon.a  \
	$(top_builddir)/src/sthread/libsthread.a  \
	$(top_builddir)/src/fc/libfc.a  \
	$(LOCALLDADD)

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .purecov .pure .quant .$(OBJEXT) .common .cpp .dvi .fc .html .o .obj .pdf .ps .ssm .sthread .tex
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.generic $(top_srcdir)/Makefile.local $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/sm/tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/sm/tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/Makefile.generic $(top_srcdir)/Makefile.local:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)
create_rec$(EXEEXT): $(create_rec_OBJECTS) $(create_rec_DEPENDENCIES) $(EXTRA_create_rec_DEPENDENCIES) 
	@rm -f create_rec$(EXEEXT)
	$(CXXLINK) $(create_rec_OBJECTS) $(create_rec_LDADD) $(LIBS)
file_scan$(EXEEXT): $(file_scan_OBJECTS) $(file_scan_DEPENDENCIES) $(EXTRA_file_scan_DEPENDENCIES) 
	@rm -f file_scan$(EXEEXT)
	$(CXXLINK) $(file_scan_OBJECTS) $(file_scan_LDADD) $(LIBS)
file_scan_many$(EXEEXT): $(file_scan_many_OBJECTS) $(file_scan_many_DEPENDENCIES) $(EXTRA_file_scan_many_DEPENDENCIES) 
	@rm -f file_scan_many$(EXEEXT)
	$(CXXLINK) $(file_scan_many_OBJECTS) $(file_scan_many_LDADD) $(LIBS)
htab$(EXEEXT): $(htab_OBJECTS) $(htab_DEPENDENCIES) $(EXTRA_htab_DEPENDENCIES) 
	@rm -f htab$(EXEEXT)
	$(CXXLINK) $(htab_OBJECTS) $(htab_LDADD) $(LIBS)
lock_cache_test$(EXEEXT): $(lock_cache_test_OBJECTS) $(lock_cache_test_DEPENDENCIES) $(EXTRA_lock_cache_test_DEPENDENCIES) 
	@rm -f lock_cache_test$(EXEEXT)
	$(CXXLINK) $(lock_cache_test_OBJECTS) $(lock_cache_test_LDADD) $(LIBS)
lockid_test$(EXEEXT): $(lockid_test_OBJECTS) $(lockid_test_DEPENDENCIES) $(EXTRA_lockid_test_DEPENDENCIES) 
	@rm -f lockid_test$(EXEEXT)
	$(CXXLINK) $(lockid_test_OBJECTS) $(lockid_test_LDADD) $(LIBS)
mrbtrees_test$(EXEEXT): $(mrbtrees_test_OBJECTS) $(mrbtrees_test_DEPENDENCIES) $(EXTRA_mrbtrees_test_DEPENDENCIES) 
	@rm -f mrbtrees_test$(EXEEXT)
	$(CXXLINK) $(mrbtrees_test_OBJECTS) $(mrbtrees_test_LDADD) $(LIBS)
rtree_example$(EXEEXT): $(rtree_example_OBJECTS) $(rtree_example_DEPENDENCIES) $(EXTRA_rtree_example_DEPENDENCIES) 
	@rm -f rtree_example$(EXEEXT)
	$(CXXLINK) $(rtree_example_OBJECTS) $(rtree_example_LDADD) $(LIBS)
sort_stream$(EXEEXT): $(sort_stream_OBJECTS) $(sort_stream_DEPENDENCIES) $(EXTRA_sort_stream_DEPENDENCIES) 
	@rm -f sort_stream$(EXEEXT)
	$(CXXLINK) $(sort_stream_OBJECTS) $(sort_stream_LDADD) $(LIBS)
startstop$(EXEEXT): $(startstop_OBJECTS) $(startstop_DEPENDENCIES) $(EXTRA_startstop_DEPENDENCIES) 
	@rm -f startstop$(EXEEXT)
	$(CXXLINK) $(startstop_OBJECTS) $(startstop_LDADD) $(LIBS)
vtable_example$(EXEEXT): $(vtable_example_OBJECTS) $(vtable_example_DEPENDENCIES) $(EXTRA_vtable_example_DEPENDENCIES) 
	@rm -f vtable_example$(EXEEXT)
	$(CXXLINK) $(vtable_example_OBJECTS) $(vtable_example_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/create_rec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/file_scan.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/file_scan_many.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/htab.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/init_config_options.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lock_cache_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lockid_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mrbtrees_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rtree_example.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sort_stream.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/startstop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vtable_example.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile
installdirs:
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-local mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am: pdf-local

ps: ps-am

ps-am:

uninstall-am:

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-local ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am pdf-local ps ps-am tags \
	uninstall uninstall-am


# --------------------------------------------------------
#
# add target to create .cvsignore file
#
# --------------------------------------------------------
.cvsignore:  Makefile 
	touch $@
	$(RM) $@
	echo $(ALLCLEANFILES) >& $@

# --------------------------------------------------------
#
# add target to get rid of additional built objects,
#    in particular this is for the PURE targets
#
# --------------------------------------------------------
clean-local: 
	$(RM) $(LOCALCLEAN) 
@PURIFY_TRUE@.$(OBJEXT).pure:  
@PURIFY_TRUE@	$(PURIFY_BIN)/purify $(PURIFY_FLAGS)  $(PURIFY_COLLECTOR) $(CXX) -o $@ $< $(LDADD) $(LIBS)
@QUANTIFY_TRUE@.$(OBJEXT).quant:  
@QUANTIFY_TRUE@	$(QUANTIFY_BIN)/quantify $(QUANTIFY_FLAGS) $(QUANTIFY_COLLECTOR)  $(CXX) -o $@ $< $(LDADD) $(LIBS)

SUFFIXES: .tex .fc .common .sthread .ssm .html .ps .dvi .pdf 

.fc.ps: 
	groff $(GROFF_OPTIONS) -Tps $< > $@

.common.ps: 
	groff $(GROFF_OPTIONS) -Tps $< > $@

.sthread.ps: 
	groff $(GROFF_OPTIONS) -Tps $< > $@

.ssm.ps: 
	groff $(GROFF_OPTIONS) -Tps $< > $@

.fc.html: 
	groff $(GROFF_OPTIONS) -Thtml $< > $@

.common.html: 
	groff $(GROFF_OPTIONS) -Thtml $< > $@

.sthread.html: 
	groff $(GROFF_OPTIONS) -Thtml $< > $@

.ssm.html: 
	groff $(GROFF_OPTIONS) -Thtml $< > $@

.fc.dvi: 
	groff $(GROFF_OPTIONS) -Tdvi $< > $@

.common.dvi: 
	groff $(GROFF_OPTIONS) -Tdvi $< > $@

.sthread.dvi: 
	groff $(GROFF_OPTIONS) -Tdvi $< > $@

.ssm.dvi:
	groff $(GROFF_OPTIONS) -Tdvi $< > $@

.dvi.pdf:
	dvipdfm $<

.tex.dvi:
	latex $<
# second time to get the x-refs
	latex $<

# html-local: $(HTML_TARGETS)

pdf-local: $(PDF_TARGETS)
@PURECOV_TRUE@.$(OBJEXT).purecov:  
@PURECOV_TRUE@	$(PURECOV_BIN)/purecov $(PURECOV_FLAGS)  $(PURECOV_COLLECTOR) $(CXX) -o $@ $< $(LDADD) $(LIBS)

$(RESULT_COMPARISON_FILES) : noop

noop:

file_scan.pure:  
	$(PURIFY_BIN)/purify $(PURIFY_FLAGS)  -collector=$(PURIFY_COLLECTOR)  $(CXX) -o $@ $(file_scan_SOURCES:.cpp=.o) $(LDADD) $(LIBS)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

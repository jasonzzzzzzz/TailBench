# <std-header style='tcl' orig-src='shore'>
#
#  $Id: bt.insert.1,v 1.11.4.1 2009/12/03 00:21:05 nhall Exp $
#
# SHORE -- Scalable Heterogeneous Object REpository
#
# Copyright (c) 1994-99 Computer Sciences Department, University of
#                       Wisconsin -- Madison
# All Rights Reserved.
#
# Permission to use, copy, modify and distribute this software and its
# documentation is hereby granted, provided that both the copyright
# notice and this permission notice appear in all copies of the
# software, derivative works or modified versions, and any portions
# thereof, and that both notices appear in supporting documentation.
#
# THE AUTHORS AND THE COMPUTER SCIENCES DEPARTMENT OF THE UNIVERSITY
# OF WISCONSIN - MADISON ALLOW FREE USE OF THIS SOFTWARE IN ITS
# "AS IS" CONDITION, AND THEY DISCLAIM ANY LIABILITY OF ANY KIND
# FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
#
# This software was developed with support by the Advanced Research
# Project Agency, ARPA order number 018 (formerly 8230), monitored by
# the U.S. Army Research Laboratory under contract DAAB07-91-C-Q518.
# Further funding for this work was provided by DARPA through
# Rome Research Laboratory Contract No. F30602-97-2-0247.
#
#   -- do not edit anything above this line --   </std-header>

#
source $script_dir/vol.init
source $script_dir/bt.tcl

if {$logging==0} {
    echo "Logging off: script not run. "
} else {

# set keylist { 300 200 50 104 101 190 320 330 310 440 430 420 66 67 68 }
    set keylist { 118 1493 1663 1797 235 2487 \
	2786 2927 \
	3174 373 \
	3774 3787 \
	3897 3912 \
	587 511 }

    proc mkval { i e } {
	global max_btree_entry_size
	set maxsize [expr {$max_btree_entry_size - 30}]
	if {$max_btree_entry_size <= 4048} {
	    set res [format "%0*s" $maxsize a]
	} else {
	    set res [format "%0*s" $e a]
	}
	return $res
    }

    source $script_dir/bt.insert.0

    unset keylist unique

}


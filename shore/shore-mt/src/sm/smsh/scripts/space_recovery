# <std-header style='tcl' orig-src='shore'>
#
#  $Id: space_recovery,v 1.18.4.1 2010/01/12 02:02:04 nhall Exp $
#
# SHORE -- Scalable Heterogeneous Object REpository
#
# Copyright (c) 1994-99 Computer Sciences Department, University of
#                       Wisconsin -- Madison
# All Rights Reserved.
#
# Permission to use, copy, modify and distribute this software and its
# documentation is hereby granted, provided that both the copyright
# notice and this permission notice appear in all copies of the
# software, derivative works or modified versions, and any portions
# thereof, and that both notices appear in supporting documentation.
#
# THE AUTHORS AND THE COMPUTER SCIENCES DEPARTMENT OF THE UNIVERSITY
# OF WISCONSIN - MADISON ALLOW FREE USE OF THIS SOFTWARE IN ITS
# "AS IS" CONDITION, AND THEY DISCLAIM ANY LIABILITY OF ANY KIND
# FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
#
# This software was developed with support by the Advanced Research
# Project Agency, ARPA order number 018 (formerly 8230), monitored by
# the U.S. Army Research Laboratory under contract DAAB07-91-C-Q518.
# Further funding for this work was provided by DARPA through
# Rome Research Laboratory Contract No. F30602-97-2-0247.
#
#   -- do not edit anything above this line --   </std-header>

#
# Test for recovery bug with page flags.
# Tests involve creating index/file, destroying it and
# creating a different store type (file/index) to reuse the space.
#
source $script_dir/vol.init

verbose LOGGING = $logging
if { $logging == 1 } {

set fmt [expr {$page_size / 3}]

sm begin_xct
verbose tid [sm xct_to_tid [sm xct]]
# create index and put enough things in it to require >1 page
set ndx [sm create_index $volid btree]
verbose created index $ndx
set nrec 10;
for {set i 1} {$i <= $nrec} {incr i} {
    verbose inserting $i
    sm create_assoc $ndx [format $short_form $i] [formatlong 0 $fmt %d $i]
}
verbose index id: $ndx
verbose commit
sm commit_xct

verbose forcing buffers...
sm force_buffers

sm begin_xct
verbose tid [sm xct_to_tid [sm xct]]
verbose destroyng $ndx
sm destroy_index $ndx
sm commit_xct
verbose forcing buffers...
sm force_buffers

sm begin_xct
verbose tid [sm xct_to_tid [sm xct]]

verbose creating file
set f1 [sm create_file $volid ]
verbose file id: $f1

#change body width

verbose creating records ...
set r1 [ sm create_rec $f1 "" 11 [format $short_form 1] ]
verbose created $r1 
#set r2 [ sm create_rec $f1 "" 11 [format $short_form 2] ]
#verbose created $r2 
#set r3 [ sm create_rec $f1 "" 11 [format $short_form 2] ]
#verbose created $r3 
#set r4 [ sm create_rec $f1 "" 11 [format $short_form 2] ]
#verbose created $r4 

verbose commit
sm commit_xct

verbose forcing buffers...
sm force_buffers


#sm dismount_dev /local.caseus/zwilling/shore_vol/dev1
verbose restarting "--------------------------------------------------------"
restart

sm begin_xct
verbose tid [sm xct_to_tid [sm xct]]
verbose destroying file $f1
sm destroy_file $f1
verbose commit
sm commit_xct

sm begin_xct
verbose tid [sm xct_to_tid [sm xct]]

verbose creating file
set f1 [sm create_file $volid ]
verbose file id: $f1

verbose creating r1 
set r1 [ sm create_rec $f1 "" 11 [format $short_form 1] ]
verbose $r1 
verbose commit
sm commit_xct

sm force_buffers

sm begin_xct
verbose tid [sm xct_to_tid [sm xct]]
verbose destroying file $f1
sm destroy_file $f1
verbose commit
sm commit_xct
sm force_buffers

sm begin_xct
verbose tid [sm xct_to_tid [sm xct]]
# create index and put enough things in it to require >1 page
set ndx [sm create_index $volid btree]
verbose created index $ndx
set nrec 10;
for {set i 1} {$i <= $nrec} {incr i} {
    verbose inserting $i
    sm create_assoc $ndx [format $short_form $i] [formatlong 0 $fmt %d $i]
}
verbose index id: $ndx
verbose commit
sm commit_xct

sm force_buffers

#sm dismount_dev /local.caseus/zwilling/shore_vol/dev1
verbose restarting "--------------------------------------------------------"
restart

verbose recovering
sm begin_xct
verbose tid [sm xct_to_tid [sm xct]]

verbose destroying index $ndx
sm destroy_index $ndx
sm commit_xct

unset nrec f1 ndx r1 i

} else {
    echo "Script not run: logging is off."
}

unset fmt

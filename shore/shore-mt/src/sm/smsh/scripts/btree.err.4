# <std-header style='tcl' orig-src='shore'>
#
#  $Id: btree.err.4,v 1.8 1999/06/07 19:05:21 kupsch Exp $
#
# SHORE -- Scalable Heterogeneous Object REpository
#
# Copyright (c) 1994-99 Computer Sciences Department, University of
#                       Wisconsin -- Madison
# All Rights Reserved.
#
# Permission to use, copy, modify and distribute this software and its
# documentation is hereby granted, provided that both the copyright
# notice and this permission notice appear in all copies of the
# software, derivative works or modified versions, and any portions
# thereof, and that both notices appear in supporting documentation.
#
# THE AUTHORS AND THE COMPUTER SCIENCES DEPARTMENT OF THE UNIVERSITY
# OF WISCONSIN - MADISON ALLOW FREE USE OF THIS SOFTWARE IN ITS
# "AS IS" CONDITION, AND THEY DISCLAIM ANY LIABILITY OF ANY KIND
# FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
#
# This software was developed with support by the Advanced Research
# Project Agency, ARPA order number 018 (formerly 8230), monitored by
# the U.S. Army Research Laboratory under contract DAAB07-91-C-Q518.
# Further funding for this work was provided by DARPA through
# Rome Research Laboratory Contract No. F30602-97-2-0247.
#
#   -- do not edit anything above this line --   </std-header>

#
#  test btree key type conversions
#  These are key types that ssh cannot cope with except for
#  doing the key type conversions.
#
source $script_dir/vol.init

set typelist { i1i2i4 u2u4i2i4b*1000 u2u2u2u2u2u1i4 f4f8u1i1 }

set len [llength $typelist]

set kt 1
for {set k 0} {$k < $len} {incr k} {
    set ktype [lindex $typelist $k] 
    verbose "---- testing -- $ktype"
    sm begin_xct
    if [catch {sm create_index $volid btree regular $ktype} ndx] {
	verbose $ndx
	assert {error_is $ndx E_WRONGKEYTYPE}
	sm abort_xct
    } else {
	catch {get_key_type $ndx} kt
	assert {expr {[string compare $kt $ktype] == 0} }
	sm commit_xct
    }
}
unset ndx typelist len ktype kt k 

